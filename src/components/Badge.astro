---
interface Props {
  variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'gray';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const {
  variant = 'primary',
  size = 'md',
  class: className = '',
} = Astro.props;

const baseStyles = 'inline-flex items-center font-medium rounded-full';

const variants: Record<NonNullable<Props['variant']>, string> = {
  primary: 'bg-primary-50 text-primary-700',
  secondary: 'bg-purple-50 text-purple-700',
  success: 'bg-green-50 text-green-700',
  warning: 'bg-yellow-50 text-yellow-700',
  error: 'bg-red-50 text-red-700',
  gray: 'bg-gray-100 text-gray-700',
};

const sizes: Record<NonNullable<Props['size']>, string> = {
  sm: 'px-2 py-0.5 text-xs',
  md: 'px-2.5 py-0.5 text-sm',
  lg: 'px-3 py-1 text-base',
};

const classes = [
  baseStyles,
  variants[variant],
  sizes[size],
  className,
].filter(Boolean).join(' ');
---

<span class={classes}>
  <slot />
</span> 