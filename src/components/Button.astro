---
interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'text';
  size?: 'sm' | 'md' | 'lg';
  fullWidth?: boolean;
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  class?: string;
}

const {
  variant = 'primary',
  size = 'md',
  fullWidth = false,
  href,
  type = 'button',
  class: className = '',
} = Astro.props;

const baseStyles = 'inline-flex items-center justify-center font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';

const variants = {
  primary: 'bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500',
  secondary: 'bg-white text-primary-700 border border-primary-100 hover:bg-primary-50 focus:ring-primary-500',
  outline: 'border-2 border-white text-white hover:bg-white hover:text-primary-700 focus:ring-white',
  text: 'text-primary-600 hover:text-primary-700 hover:bg-primary-50 focus:ring-primary-500',
};

const sizes = {
  sm: 'px-3 py-2 text-sm rounded-md',
  md: 'px-4 py-2 text-base rounded-lg',
  lg: 'px-6 py-3 text-lg rounded-lg',
};

const classes = [
  baseStyles,
  variants[variant],
  sizes[size],
  fullWidth && 'w-full',
  className,
].filter(Boolean).join(' ');
---

{
  href ? (
    <a href={href} class={classes}>
      <slot />
    </a>
  ) : (
    <button type={type} class={classes}>
      <slot />
    </button>
  )
} 