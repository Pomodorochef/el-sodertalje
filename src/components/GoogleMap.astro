---
// Center coordinates for Södertälje city center
const CITY_LAT = 59.1954;
const CITY_LNG = 17.6255;
const CITY_NAME = "Södertälje";

// Get Google Maps API key from environment variable
const GOOGLE_MAPS_API_KEY = import.meta.env.PUBLIC_GOOGLE_MAPS_API_KEY;
---

<section class="relative">
  <div class="container mx-auto px-4 py-16">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-bold mb-4">Elektriker i Södertälje</h2>
      <p class="text-gray-600 max-w-2xl mx-auto">
        Vi utför elinstallationer och service i hela Södertälje med omnejd, inklusive Järna, 
        Hölö, Pershagen, Östertälje, Brunnsäng, Ronna, Geneta, Hovsjö och Saltskog.
      </p>
    </div>
  </div>

  <div class="aspect-w-16 aspect-h-9 rounded-lg overflow-hidden shadow-lg">
    <iframe
      src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d130287.77785644832!2d17.4981653!3d59.1953897!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x465f724c89064b13%3A0xbda5d7f509d19e69!2sS%C3%B6dert%C3%A4lje!5e0!3m2!1ssv!2sse!4v1234567890"
      width="100%"
      height="100%"
      style="border:0;"
      allowfullscreen=""
      loading="lazy"
      referrerpolicy="no-referrer-when-downgrade"
    ></iframe>
  </div>
</section>

<script>
/// <reference types="@types/google.maps" />

let map: google.maps.Map;

function initMap(): void {
  const sodertalje = { lat: 59.1954, lng: 17.6255 };
  
  const mapOptions: google.maps.MapOptions = {
    zoom: 12, // Lower zoom level to show more of the city
    center: sodertalje,
    mapTypeControl: false,
    fullscreenControl: false,
    streetViewControl: false,
    styles: [
      {
        featureType: "all",
        elementType: "labels.text.fill",
        stylers: [{ color: "#4a5568" }]
      },
      {
        featureType: "water",
        elementType: "geometry",
        stylers: [{ color: "#edf2f7" }]
      },
      {
        featureType: "landscape",
        elementType: "geometry",
        stylers: [{ color: "#f7fafc" }]
      }
    ]
  };

  map = new google.maps.Map(document.getElementById("map") as HTMLElement, mapOptions);

  // Define service area coordinates
  const serviceAreas = [
    { name: "Centrala Södertälje", lat: 59.1954, lng: 17.6255 },
    { name: "Järna", lat: 59.0907, lng: 17.5671 },
    { name: "Hölö", lat: 58.9892, lng: 17.5401 },
    { name: "Pershagen", lat: 59.1557, lng: 17.6435 },
    { name: "Östertälje", lat: 59.2007, lng: 17.6498 },
    { name: "Brunnsäng", lat: 59.1854, lng: 17.6088 },
    { name: "Ronna", lat: 59.1897, lng: 17.6066 },
    { name: "Geneta", lat: 59.1831, lng: 17.5989 },
    { name: "Hovsjö", lat: 59.1775, lng: 17.5907 },
    { name: "Saltskog", lat: 59.1831, lng: 17.6198 }
  ];

  // Add markers for each service area
  serviceAreas.forEach(area => {
    const marker = new google.maps.Marker({
      position: { lat: area.lat, lng: area.lng },
      map,
      title: area.name,
      animation: google.maps.Animation.DROP
    });

    const infoWindow = new google.maps.InfoWindow({
      content: `
        <div class="p-2">
          <h3 class="font-bold">${area.name}</h3>
          <p class="text-gray-600">Elektriker i ${area.name}</p>
        </div>
      `
    });

    marker.addListener("click", () => {
      infoWindow.open(map, marker);
    });
  });
}

declare global {
  interface Window {
    initMap: () => void;
  }
}

window.initMap = initMap;
</script>

<script 
  async 
  defer 
  src={`https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&callback=initMap`}
></script> 